version: '3.9'

services:
  api: &api
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: dev
    image: dev-deploy
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app/
    ports:
      - '8000:8000'
    env_file:
      - ./.env
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - ./.docker-conf/postgresql:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=ghasedakpass
      - POSTGRES_USER=ghasedakuser
      - POSTGRES_DB=ghasedak

  adminer:
    image: adminer:4-standalone
    restart: always
    ports:
      - '8080:8080'
  
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=mquser
      - RABBITMQ_DEFAULT_PASS=mqpass
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - ./.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  celery:
    <<: *api
    command: celery -A config worker --loglevel=info
    ports: [ ]
    volumes: [ ]
    env_file:
      - ./.env
    depends_on:
      - api
      - rabbitmq

  celery-beat:
    <<: *api
    command: celery -A 'config' beat -l info
    ports: [ ]
    volumes: [ ]
    env_file:
      - ./.env
    depends_on:
      - celery
      - rabbitmq

  dashboard:
    <<: *api
    command: celery --broker=${RABBITMQ_URL} flower --port=5555
    ports:
      - '5555:5555'
    volumes: [ ]
    env_file:
      - ./.env
    depends_on:
      - api
      - celery
      - rabbitmq